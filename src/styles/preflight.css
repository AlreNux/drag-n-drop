:-moz-focusring {
  outline: 1px dotted ButtonText;
}

:-moz-ui-invalid {
  box-shadow: none;
}

::moz-focus-inner {
  border-style: none;
  padding: 0;
}

::-webkit-outer-spin-button,
::-webkit-inner-spin-button {
  appearance: none;
}

::-webkit-search-decoration {
  appearance: none;
}

::-webkit-file-upload-button {
  appearance: button;
  font: inherit;
}

[type='search'] {
  appearance: textfield;
  outline-offset: -2px;
}

abbr[title] {
  -webkit-text-decoration: none;
  text-decoration: none;
}

button,
input {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
  padding: 0;
  line-height: inherit;
  color: inherit;
}

button {
  text-transform: none;
  background-color: transparent;
  background-image: none;
}

button,
[type='button'],
[type='reset'],
[type='submit'] {
  appearance: button;
}

h1,
h5,
h4 {
  margin: 0;
  font-size: inherit;
  font-weight: inherit;
}

svg {
  display: block;
}

table {
  text-indent: 0;
  border-color: inherit;
  border-collapse: collapse;
}

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(:not(iframe, canvas, img, svg, video):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
  color: inherit;
  text-decoration: inherit;
}

/* Button with type button always needs cursor: pointer */
button[type='button'],
[role='button'] {
  cursor: pointer;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-width: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly. */
:where([contenteditable]) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  line-break: after-white-space;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable='true']) {
  -webkit-user-drag: element;
}
